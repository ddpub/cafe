#ifndef __cashier_f__
#define __cashier_f__

/**
@file
Subclass of base_cashier_f, which is generated by wxFormBuilder.
*/

#include "base_cashier_f.h"
#include <vector>
#include <wx_util/wx_util.hpp>
#include <memory>

/** Implementing base_cashier_f */
class cashier_f : public base_cashier_f
{
protected:
	// Handlers for base_cashier_f events.
	void order_type_btnClick( wxCommandEvent& event );
public:
	/** Constructor */
	cashier_f( wxWindow* parent );
public:
  /** Destructor */
	~cashier_f();
private:	
	/** Defines */
private:
	void hide_sales_tax(bool hide=true) { m_sales_tax_lb->Show(!hide); m_sales_tax_ed->Show(!hide); tax_sizer->Layout(); total_pnl_sizer->Layout(); r_sizer->Layout(); }
	void hide_gratuity_tax(bool hide=true) { m_gratuity_lb->Show(!hide); m_gratuity_ed->Show(!hide); gratuity_sizer->Layout(); total_pnl_sizer->Layout(); r_sizer->Layout(); }
	void hide_subtotal(bool hide=true) { m_subtotal_lb->Show(!hide); m_subtotal_ed->Show(!hide); subtotal_sizer->Layout(); total_pnl_sizer->Layout(); r_sizer->Layout(); }
	void change_subtotal_ed(const wxString& val) { m_subtotal_ed->SetLabel(val); }
	void change_sales_tax_lb(const wxString& val) { m_sales_tax_lb->SetLabel(val); }
	void change_sales_tax_ed(const wxString& val) { m_sales_tax_ed->SetLabel(val); }
	void change_gratuity_lb(const wxString& val) { m_gratuity_lb->SetLabel(val); }
	void change_gratuity_ed(const wxString& val) { m_gratuity_ed->SetLabel(val); }
	void change_tools_lb(const wxString& val) { m_tools_lb->SetLabel(val); }
	void change_tools_ed(const wxString& val) { m_tools_ed->SetLabel(val); }
	void change_total_ed(const wxString& val) { m_total_ed->SetLabel(val); }
	void btn_repaint();
private:
	void resume_wait();
private:
	void menu_select_btnClick( wxCommandEvent& event );
	void menu_tree_btnClick( wxCommandEvent& event );
	void menu_item_btnClick( wxCommandEvent& event );
	void process_btnClick( wxCommandEvent& event );
	void plus_btnClick( wxCommandEvent& event );
	void minus_btnClick( wxCommandEvent& event );
	void delete_btnClick( wxCommandEvent& event );
	void discount_btnClick( wxCommandEvent& event );
	void misc_charges_btnClick( wxCommandEvent& event );
	void comment_entree_btnClick( wxCommandEvent& event );
	void refund_order_btnClick( wxCommandEvent& event );
	void OnConfigDbClick( wxMouseEvent& event );
	void token_btnClick( wxCommandEvent& event );
	void entree_code_btnClick( wxCommandEvent& event );
	void cash_advance_btnClick( wxCommandEvent& event );
	void shift_btnClick( wxCommandEvent& event );
	void open_cash_drawer_btnClick( wxCommandEvent& event );
	void browse_delayed_orders_btnClick( wxCommandEvent& event );
	void logout_btnClick( wxCommandEvent& event );
	void delayed_order_details_btnClick( wxCommandEvent& event );
	void save_and_hide_btnClick( wxCommandEvent& event );
private:
	/** Evetns */
	void sgSelChanged( wxTreeEvent& event );
	void sgSelChanging( wxTreeEvent& event );
private:
	std::auto_ptr<toggle_group_t> order_type_toggle_group_ptr;
	wx_timer_t<cashier_f> timer_;
	wx_timer_t<cashier_f> seance_timer_;
	wx_timer_t<cashier_f> lock_timer_;
	bool auto_lock_;
private:	
	/** Methods */
	void OnTimer (wxTimerEvent& event);
	void OnSeanceTimer(wxTimerEvent& event);
	void OnLockTimer(wxTimerEvent& event);
	void sg_show(const std::string& type_check_sum, const std::string& check_sum);
	void base_recalc_coupon(const std::string& type_check_sum, const std::string& check_sum);
	void recalc_coupon(const std::string& type_check_sum, const std::string& check_sum);
	void recalc_coupon();
	void refresh_order_list();
	void logout();
	void apply_lang();
	/** Componets */
	wxButton* menu_select_btn;
	std::vector<wxButton*> menu_tree_vec;
	std::vector<wxButton*> menu_item_vec;
	std::vector<wxButton*> menu_hot_vec;
	bool for_here_type_;
	bool to_go_type_;
	bool delivery_type_;
	bool pickup_type_;
	bool employee_meal_type_;
	bool donation_type_;
	void browse_delayed_orders_btnShow(bool);
	void open_cash_drawer_btnShow(bool);
	void current_user_lbShow(bool);
private:
	int delayed_order_count_;
	int open_cash_advance_count_;
};

#endif // __cashier_f__
