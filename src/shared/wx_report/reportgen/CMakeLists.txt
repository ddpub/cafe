SET (C_FILES
	${CMAKE_CURRENT_SOURCE_DIR}/src/wxMaskController.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/src/wxReport.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/src/wxReportFiller.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/src/wxReportWriter.cpp
	)
SET (H_FILES
	#${CMAKE_CURRENT_SOURCE_DIR}/treelistctrl.h
	${CMAKE_CURRENT_SOURCE_DIR}/include/xmlex.h
	${CMAKE_CURRENT_SOURCE_DIR}/include/wxReportWriter.h
	${CMAKE_CURRENT_SOURCE_DIR}/include/wxReportFiller.h
	${CMAKE_CURRENT_SOURCE_DIR}/include/wxReport.h
	${CMAKE_CURRENT_SOURCE_DIR}/include/wxMaskController.h)
SET (OTHER_FILES 
	${CMAKE_CURRENT_SOURCE_DIR}/CMakeLists.txt)
	
IF (SOURCE_FILES)	
	foreach(file ${C_FILES} ${H_FILES} ${OTHER_FILES})
		MESSAGE (STATUS "!@# ${file}")
	endforeach(file)	
	RETURN()
ENDIF (SOURCE_FILES)


PROJECT (TreeListCtrlLibrary)
CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

IF (UNIX)
	SET (wxWidgets_USE_LIBS base)
	FIND_PACKAGE (wxWidgets)
	IF (NOT wxWidgets_FOUND)
		MESSAGE (FATAL_ERROR "wxWidgets not found")
	ENDIF (NOT wxWidgets_FOUND)
	INCLUDE (${wxWidgets_USE_FILE})
	INCLUDE_DIRECTORIES(${wxWidgets_INCLUDE_DIRS})
ENDIF (UNIX)

ADD_DEFINITIONS (${WXWIDGETS_DEFINITIONS})
ADD_DEFINITIONS(-D_WIN32_BUILD_)

IF (MINGW)
	SET (WXW_USE_DEBUG OFF)
	SET (WXW_USE_SHARED OFF)
	SET (WXW_USE_UNICODE ON)
	SET (WXW_USE_UNIV OFF)
	SET (WXW_USE_MONO OFF)
	SET (WXWIDGETS_FILE_VERSION "28")
	SET (WXWIDGETS_VERSION "2.8")

	INCLUDE (FindwxW)

	IF (NOT WXWIDGETS_FOUND)
		MESSAGE(FATAL_ERROR "wxWidgets not found")
	ENDIF (NOT WXWIDGETS_FOUND)
	
	
ENDIF (MINGW)

IF (MINGW)
	INCLUDE_DIRECTORIES (${WXWIDGETS_INCLUDE_DIR} $ENV{INCLUDE} $ENV{CAFE_SRC}/shared/wx_report/rep $ENV{CAFE_SRC}/shared/wx_report/rep/reportgen/include $ENV{CAFE_SRC}/shared/wx_report/rep/reportgen/src)
	ADD_DEFINITIONS (${WXWIDGETS_DEFINITIONS})

	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}${WXWIDGETS_CXX_FLAGS}")
	SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS}${WXWIDGETS_EXE_LINKER_FLAGS}")
ENDIF (MINGW)

#SET (C_FILES ${CMAKE_CURRENT_SOURCE_DIR}/treelistctrl.cpp)
#SET (H_FILES ${CMAKE_CURRENT_SOURCE_DIR}/treelistctrl.h)

IF (MINGW)
MESSAGE (STATUS "${WXWIDGETS_LIBRARIES}")
ENDIF (MINGW)


#IF (WIN32)
	#ADD_executable (wxReport SHARED ${C_FILES})
	ADD_LIBRARY (wxReport-s STATIC ${C_FILES})
	target_link_libraries(wxReport-s ${WXWIDGETS_LIBRARIES})
#ENDIF (WIN32)




