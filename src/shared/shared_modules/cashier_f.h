#ifndef __cashier_f__
#define __cashier_f__

/**
@file
Subclass of base_cashier_f, which is generated by wxFormBuilder.
*/

#include "base_cashier_f.h"
#include <vector>
#include <wx_util/wx_util.hpp>
#include <memory>


namespace ksi_cafe {
	class order_t;
}

/** Implementing base_cashier_f */
class cashier_f : public base_cashier_f
{
protected:
	// Handlers for base_cashier_f events.
	void browse_delayed_orders_btnClick( wxCommandEvent& event );
	void open_orders_btnClick( wxCommandEvent& event );
	void logout_btnClick( wxCommandEvent& event );
	void misc_charges_btnClick( wxCommandEvent& event );
	void entree_code_btnClick( wxCommandEvent& event );
	void comment_entree_btnClick( wxCommandEvent& event );
	void plus_btnClick( wxCommandEvent& event );
	void minus_btnClick( wxCommandEvent& event );
	void order_type_btnClick( wxCommandEvent& event );
	void guest_btnClick( wxCommandEvent& event );
	void discount_btnClick( wxCommandEvent& event );
	void token_btnClick( wxCommandEvent& event );
	void delayed_order_details_btnClick( wxCommandEvent& event );
	void save_changes_btnClick( wxCommandEvent& event );
	void close_order_btnClick( wxCommandEvent& event );
	void cancel_changes_btnClick( wxCommandEvent& event );
	void print_receipt_duplicate_btnClick( wxCommandEvent& event );
	void other_orders_operations_btnClick( wxCommandEvent& event );
private:
	void hide_sales_tax(bool hide=true) { 
		if (hide) {
			m_sales_tax_lb->Hide();
			m_sales_tax_ed->Hide();
			total_gSizer->Remove(m_sales_tax_lb);
			total_gSizer->Remove(m_sales_tax_ed);
		}
		else {
		}
	}
	void hide_gratuity_tax(bool hide=true) { 
		if (hide) {
			m_gratuity_lb->Show(!hide);
			m_gratuity_ed->Show(!hide); 
			total_gSizer->Remove(m_gratuity_lb);
			total_gSizer->Remove(m_gratuity_ed);
		}
		else {
		}
	}
	void hide_subtotal(bool hide=true) { 
		if (hide) {
			m_subtotal_lb->Show(!hide);
			m_subtotal_ed->Show(!hide);
			total_gSizer->Remove(m_subtotal_lb);
			total_gSizer->Remove(m_subtotal_ed);
		}
		else {
		}
	}
	
	void change_subtotal_ed(const wxString& val) { m_subtotal_ed->SetLabel(val); }
	void change_sales_tax_lb(const wxString& val) { m_sales_tax_lb->SetLabel(val); }
	void change_sales_tax_ed(const wxString& val) { m_sales_tax_ed->SetLabel(val); }
	void change_gratuity_lb(const wxString& val) { m_gratuity_lb->SetLabel(val); }
	void change_gratuity_ed(const wxString& val) { m_gratuity_ed->SetLabel(val); }
	void change_tools_lb(const wxString& val) { m_tools_lb->SetLabel(val); }
	void change_tools_ed(const wxString& val) { m_tools_ed->SetLabel(val); }
	void change_total_ed(const wxString& val) { m_total_ed->SetLabel(val); }
	void btn_repaint();
private:
	/** Evetns */
	void sgSelChanged( wxTreeEvent& event );
	void sgSelChanging( wxTreeEvent& event );
	void menu_select_btnClick( wxCommandEvent& event );
	void menu_tree_btnClick( wxCommandEvent& event );
	void menu_item_btnClick( wxCommandEvent& event );
private:
	wx_timer_t<cashier_f> timer_;
	wx_timer_t<cashier_f> seance_timer_;
private:
	/** Methods */
	void OnTimer (wxTimerEvent& event);
	void OnSeanceTimer(wxTimerEvent& event);
private:
	void sg_show(const std::string& type_check_sum, const std::string& check_sum);
	void base_recalc_coupon(const std::string& type_check_sum, const std::string& check_sum);
	void recalc_coupon(const std::string& type_check_sum, const std::string& check_sum);
	void recalc_coupon();
private:
	void logout();
	/** Componets */
	wxButton* menu_select_btn;
	std::vector<wxButton*> menu_tree_vec;
	std::vector<wxButton*> menu_item_vec;
	std::vector<wxButton*> menu_hot_vec;
	void apply_lang();
	void refresh_order_list();
private:
	bool orderChanged_;
private:
	int delayed_order_count_;
	int open_order_count_;
public:
	/** Constructor */
	cashier_f( wxWindow* parent, ksi_cafe::order_t* order_ptr);
	~cashier_f();
private:	
	std::auto_ptr<ksi_cafe::order_t> order;
};

std::pair<int, int> makeOrderListInfo();

#endif // __cashier_f__
